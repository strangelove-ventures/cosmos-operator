---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: scheduledvolumesnapshots.cosmos.strange.love
spec:
  group: cosmos.strange.love
  names:
    kind: ScheduledVolumeSnapshot
    listKind: ScheduledVolumeSnapshotList
    plural: scheduledvolumesnapshots
    singular: scheduledvolumesnapshot
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ScheduledVolumeSnapshot is the Schema for the scheduledvolumesnapshots
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'ScheduledVolumeSnapshotSpec defines the desired state of
              ScheduledVolumeSnapshot Creates recurring VolumeSnapshots of a PVC managed
              by a CosmosFullNode. A VolumeSnapshot is a CRD (installed in GKE by
              default). See: https://kubernetes.io/docs/concepts/storage/volume-snapshots/
              This enables recurring, consistent backups. To prevent data corruption,
              a pod is temporarily deleted while the snapshot takes place which could
              take several minutes. Therefore, if you create a ScheduledVolumeSnapshot,
              you must use replica count >= 2 to prevent downtime. If <= 1 pod in
              a ready state, the controller will not temporarily delete the pod. The
              controller makes every effort to prevent downtime. Only 1 VolumeSnapshot
              is created at a time, so at most only 1 pod is temporarily deleted.
              Multiple, parallel VolumeSnapshots are not supported.'
            properties:
              limit:
                description: The number of recent VolumeSnapshots to keep. Default
                  is 3.
                format: int32
                type: integer
              schedule:
                description: A crontab schedule using the standard as described in
                  https://en.wikipedia.org/wiki/Cron. See https://crontab.guru for
                  format. Kubernetes providers rate limit VolumeSnapshot creation.
                  Therefore, setting a crontab that's too frequent may result in rate
                  limiting errors.
                type: string
            required:
            - schedule
            type: object
          status:
            description: ScheduledVolumeSnapshotStatus defines the observed state
              of ScheduledVolumeSnapshot
            properties:
              createdAt:
                description: The date when the CRD was created. Used as a reference
                  when calculating the next time to create a snapshot.
                format: date-time
                type: string
              observedGeneration:
                description: The most recent generation observed by the controller.
                format: int64
                type: integer
              status:
                description: A generic message for the user. May contain errors.
                type: string
            required:
            - createdAt
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
