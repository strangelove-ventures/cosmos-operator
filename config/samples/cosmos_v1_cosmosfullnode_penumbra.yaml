# Example Penumbra Sentry configuration
# 3 sentries, 1 per worker node
apiVersion: cosmos.strange.love/v1
kind: CosmosFullNode
metadata:
  name: penumbra-mainnet-sentry
spec:
  #type: Sentry
  type: FullNode
  replicas: 3
  chain:
    chainID: penumbra-1
    network: mainnet
    versions:
      # Genesis version
      - height: 0
        image: ghcr.io/strangelove-ventures/heighliner/cometbft:v0.37.5
        containers:
          pd: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.79.0-alpha.5
      - height: 734700
        image: ghcr.io/strangelove-ventures/heighliner/cometbft:v0.37.5
        containers:
          pd: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.78.0
      # Stage upgrades at future block heights by adding the version information here
    config:
      maxInboundPeers: 20
      maxOutboundPeers: 20
      overrides: |-
        moniker = "strangelove"
        fast_sync = true

        [consensus]
        timeout_commit = "5000ms"

        [fastsync]
        version = "v0"
      seeds: "tcp://ae42647a3da1a255dec4087439b14a643d14ac07@64.23.244.20:26656,tcp://41caa4106f68977e3a5123e56f57934a2d34a1c1@95.214.52.240:26656,tcp://c108fc8978e13d47be2115565b355dad179ffacb@65.108.228.209:26656,tcp://0e0df76fd4e4cfc5b841b681c3bc2554ecfabc7b@51.210.223.72:21956,tcp://c78e2809b38341560c027dff393b33fbf3f11e1f@65.108.77.220:26656,tcp://06516a3ef6ca69085c174298864f6abad076e01d@15.204.65.192:26656,tcp://a988534ab1e4bc42aad26ea7ec7bdc7d5415a14c@172.111.52.53:32670"
    genesisScript: echo "No need for genesis"
    addrbookScript: echo "No need for address book"
    skipInvariants: false
    binary: cometbft

  podTemplate:
    affinity:
      podAntiAffinity:
        # One sentry per node
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: penumbra-mainnet-sentry
            topologyKey: kubernetes.io/hostname
    initContainers:
      # Initialize the cometbft tmp configuration for the correct version, used for config overlay
      - name: chain-init
        command:
          - sh
          - -c
          - |
           /bin/cometbft init --home /home/operator/.tmp         
        volumeMounts:
          - mountPath: /home/operator/.tmp
            name: vol-tmp
        env:
          - name: HOME
            value: /home/operator/cosmos

        # Initialize the cometbft and pd data from a snapshot if it is not already initialized
      - name: pd-init
        image: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.79.0-alpha.5

#           use a trusted RPC endpoint here
        command:
          - sh
          - -c
          - |
            HOME=/home/operator/cosmos pd network join --moniker strangelove http://64.23.244.20:26657 || echo "Already initialized"
        volumeMounts:
          - mountPath: /home/operator/cosmos
            name: vol-chain-home

        # If pd-init initialized the data, move the cometbft data to the operator expected location and
        # move the pd data also to the root of the vol-chain-home volume so that it is included in snapshots
      - name: pd-move
        image: busybox:latest
        command:
          - sh
          - -c
          - |
            HOME=/home/operator/cosmos
            NODE0=$HOME/.penumbra/network_data/node0
            mv $NODE0/cometbft/* $HOME/ || echo "Already moved cometbft data"
            mv $NODE0/pd $HOME/ || echo "Already moved pd data"
        volumeMounts:
          - mountPath: /home/operator/cosmos
            name: vol-chain-home
    containers:
      # pd sidecar container, communicates with cometbft "node" container
      - name: pd
        command:
          - sh
          - -c
          - |
            export HOME=/home/operator/cosmos
            pd migrate --home $HOME/pd --comet-home $HOME
            pd start --home $HOME/pd
        ports:
          # CometBFT connects to PD on port 26658
          - containerPort: 26658
            name: abci
            protocol: TCP
          - containerPort: 8080
            name: grpc
            protocol: TCP
        volumeMounts:
          - mountPath: /home/operator/cosmos
            name: vol-chain-home
    probes:
      # Disable liveness and readiness probes for sentries
      strategy: None
    resources:
      requests:
        cpu: 4000m
        memory: 10Gi
      limits:
        memory: 64Gi
  selfHeal:
    heightDriftMitigation:
      threshold: 10
    pvcAutoScale:
      increaseQuantity: 10%
      maxSize: 5Ti
      usedSpacePercentage: 75
  service:
    # Create a kubernetes NodePort service for the P2P port on each sentry
    maxP2PExternalAddresses: 3
    p2pTemplate:
      type: NodePort
  volumeClaimTemplate:
    resources:
      requests:
        # Initial storage size for the PVC, needs to be enough for snapshot restore
        storage: 20Gi
    # Storage class for the PVC, will use default storage class if not specified
    storageClassName: topolvm-provisioner-thin-striped
