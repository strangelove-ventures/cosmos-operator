# Example Penumbra Sentry configuration
# 3 sentries, 1 per worker node
apiVersion: cosmos.strange.love/v1
kind: CosmosFullNode
metadata:
  name: penumbra-mainnet-sentry
spec:
  #type: Sentry
  type: FullNode
  replicas: 3
  chain:
    chainID: penumbra-1
    network: mainnet
    versions:
      - height: 0
        image: ghcr.io/strangelove-ventures/heighliner/cometbft:v0.37.9 # TODO UPDATE ME FOR STAGED UPGRADES
        containers:
          pd: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.80.0 # TODO UPDATE ME FOR STAGED UPGRADES
      - height: 2
        image: ghcr.io/strangelove-ventures/heighliner/cometbft:v0.37.9
        containers:
          pd: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.79.1
      - height: 501975
        image: ghcr.io/strangelove-ventures/heighliner/cometbft:v0.37.9
        containers:
          pd: ghcr.io/strangelove-ventures/heighliner/penumbra:v0.80.0 
      # Also apply latest image for height 0 for upgrades since they reset the Comet DB. (L16-L19)
    config:
      maxInboundPeers: 20
      maxOutboundPeers: 20
      overrides: |-
        moniker = "strangelove"
        fast_sync = true

        [consensus]
        timeout_commit = "5000ms"

        [fastsync]
        version = "v0"

        [mempool]
        max_tx_bytes = 30720
        max_txs_bytes = 10485760
      seeds: c28827cb96c14c905b127b92065a3fb4cd77d7f6@seeds.whispernode.com:21956,20e1000e88125698264454a884812746c2eb4807@seeds.lavenderfive.com:21956
      peers: 7ae6236905eb6a06d9f27e22204d4c49d4e36d4f@108.21.128.181:26656,76a0f3a7dbc735bd799a8630dfe21ef932816ba3@159.89.254.147:26656,262ef06f71446d6fac6461ea421852c9d9f50006@159.203.52.181:26656,06516a3ef6ca69085c174298864f6abad076e01d@15.204.65.192:26656,9546d20499be3cf7849621faebb3f1e4b0ab0392@164.92.120.11:26656,f90a0a85b976b9bdaf05a871083e702402621fea@160.202.131.247:26656,d4a31f4c0267d668e8cb0d9b6dfa15c860d82376@160.202.131.221:26656,d236fb98aa91f9a3dca8db6403a03923bb510048@65.21.192.115:21956
    genesisScript: echo "No need for genesis"
    addrbookScript: echo "No need for address book"
    skipInvariants: false
    binary: cometbft

  podTemplate:
    affinity:
      podAntiAffinity:
        # One sentry per node
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: penumbra-mainnet-sentry
            topologyKey: kubernetes.io/hostname
    initContainers:
      - name: chain-init
        command:
          - sh
          - -c
          - |
            set -eu
            if [ ! -d "$CHAIN_HOME/data" ]; then
            	echo "Initializing chain..."
                cometbft init --home "$CHAIN_HOME"
            else
            	echo "Skipping chain init; already initialized."
            fi

            echo "Initializing into tmp dir for downstream processing..."
            cometbft init --home "$HOME/.tmp"
        volumeMounts:
          - mountPath: /home/operator/.tmp
            name: vol-tmp
      - name: pd-move
        image: ghcr.io/strangelove-ventures/infra-toolkit:v0.1.7
        command:
          - sh
          - -c
          - |
            export HOME=/home/operator/cosmos
            NODE0=$HOME/.penumbra/network_data/node0
            mkdir $HOME/pd || echo "Already created pd dir"

            rsync -Iar --remove-source-files $NODE0/cometbft/* $HOME && rm -rf $NODE0/cometbft || echo "Already moved cometbft data"
            rsync -Iar --remove-source-files $NODE0/pd $HOME && rm -rf $NODE0/pd || echo "Already moved pd data"
            rsync -Iar --remove-source-files $HOME/cometbft/* $HOME && rm -rf $HOME/cometbft || echo "Already moved polkachu snapshot data"
        volumeMounts:
          - mountPath: /home/operator/cosmos
            name: vol-chain-home
    containers:
      - name: pd
        command:
          - sh
          - -c
          - |
            export HOME=/home/operator/cosmos
            pd migrate --home $HOME/pd --comet-home $HOME

            pd start --home $HOME/pd
        volumeMounts:
          - mountPath: /home/operator/cosmos
            name: vol-chain-home
        ports:
          - name: abci
            containerPort: 26658
            protocol: TCP
          - name: grpc
            containerPort: 8080
            protocol: TCP

    probes:
      # Disable liveness and readiness probes for sentries
      strategy: None
    resources:
      requests:
        cpu: 4000m
        memory: 10Gi
      limits:
        memory: 64Gi
  selfHeal:
    heightDriftMitigation:
      threshold: 10
    pvcAutoScale:
      increaseQuantity: 10%
      maxSize: 5Ti
      usedSpacePercentage: 75
  service:
    # Create a kubernetes NodePort service for the P2P port on each sentry
    maxP2PExternalAddresses: 3
    p2pTemplate:
      type: NodePort
  volumeClaimTemplate:
    resources:
      requests:
        # Initial storage size for the PVC, needs to be enough for snapshot restore
        storage: 30Gi
    # Storage class for the PVC, will use default storage class if not specified
    storageClassName: topolvm-provisioner-thin-striped
